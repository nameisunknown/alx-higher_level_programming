>>> add_integer =  __import__("0-add_integer").add_integer

>>> add_integer(-4, -91)
95

>>> add_integer(5, 8)
13

>>> add_integer(13, -7)
6

>>> add_integer(-9, 8)
-1

>>> add_integer(67.7, -8)
-59

>>> add_integer(9, 12.23)
3

>>> add_integer(9.45, -2)
7

>>> add_integer(-2)
96

>>> add_integer("h", 2)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(9, "1")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer("7", "h")
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(int("four"))
Traceback (most recent call last):
ValueError: invalid literal for int() with base 10: 'g'

>>> add_integer("7", int("two"))
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer([2], 3)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(int("five"), 3)
Traceback (most recent call last):
ValueError: invalid literal for int() with base 10: 'five'

>>> add_integer(float('gif'), 7)
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(4, float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
